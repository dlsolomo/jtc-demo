{
  "description": "secrets for communication",
  "name": "Secrets",
  "type": "userCreated",
  "manifest": {
    "template_type": "Terraform",
    "template_provider": "Other",
    "icon": "serviceicon_1.svg",
    "template": {
      "templateData": "variable \"host\" {\n  description = \"IP of host to ssh\"\n  default =\"\"\n}\n\nvariable \"root_password\" {\n  description = \"ssh root password\"\n\n}\n\nresource \"null_resource\" \"Secrets\" {\n  provisioner \"remote-exec\" {\n      inline = [\n        \"DB_SVC=$(kubectl get svc | grep db2|grep NodePort | awk '{print $1}')\",\n        \"MQ_SVC=$(kubectl get svc |grep mq|grep NodePort|awk '{print $1}')\",\n        \"REDIS_SVC=$(kubectl get svc | grep redis | grep master | awk '{print $1}')\",\n        \"kubectl create secret generic mq --from-literal=id=app --from-literal=pwd= --from-literal=host=$MQ_SVC --from-literal=port=1414 --from-literal=channel=DEV.APP.SVRCONN --from-literal=queue-manager=qm1 --from-literal=queue=NotificationQ\",\n        \"kubectl create secret generic db2 --from-literal=id=db2inst1 --from-literal=pwd=<db_user_password> --from-literal=host=$DB_SVC --from-literal=port=50000 --from-literal=db=trader\",\n        \"REDIS_SECRET=$(kubectl get secret | grep redis | grep token | awk '{print $1}')\",\n        \"REDIS_PASSWORD=$(kubectl get secret --namespace default $REDIS_SECRET -o jsonpath=\\\"{.data.redis-password}\\\" | base64 --decode)\",\n        \"kubectl create secret generic redis --from-literal=url=redis://x:$REDIS_PASSWORD@$REDIS_SVC:6379 --from-literal=quandl-key=<your_quandl_key>\",\n        \"kubectl create secret generic oidc --from-literal=name=stock-trader --from-literal=issuer=<your_issuer_url> --from-literal=auth=<your_oidc> --from-literal=token=<your_oidc_token> --from-literal=id=<id> --from-literal=secret=<secret_created> --from-literal=key=<idaas_key> --from-literal=nodeport=https://${var.host}:32389\",\n        \"kubectl create secret generic openwhisk --from-literal=url=<openWhishk_url> --from-literal=id=<userid_of_openwhishk_app> --from-literal=pwd=<openwhisk_app_pasword>\",\n        \"kubectl create secret generic twitter --from-literal=consumerKey=<twitter_consumer_key> --from-literal=consumerSecret=<consumer_secret> --from-literal=accessToken=<twitter_access_token> --from-literal=accessTokenSecret=<access_token_secret>\",\n        \"kubectl create secret generic jwt  --from-literal=audience=stock-trader --from-literal=issuer=http://stock-trader.ibm.com\",\n        \"kubectl create secret generic ingress-host --from-literal=host=10.0.0.1:31007\",\n      ]\n  connection {\n    host = \"${var.host}\"\n    type     = \"ssh\"\n    user     = \"root\"\n    password = \"${var.root_password}\"\n  }\n }\n}",
      "templateVariables": {
        "template_input_params": [
          {
            "name": "host",
            "description": "IP of host to ssh",
            "default": "",
            "type": "string",
            "required": true,
            "secured": false,
            "label": "host",
            "hidden": false,
            "immutable": false
          },
          {
            "name": "root_password",
            "description": "ssh root password",
            "type": "password",
            "required": true,
            "secured": true,
            "label": "root_password",
            "hidden": false,
            "immutable": false,
            "default": ""
          }
        ],
        "template_output_params": []
      }
    }
  },
  "metadata": {
    "displayName": "Secrets",
    "bullets": []
  },
  "created_at": "2018-06-19T06:49:08.495Z",
  "id": "5b28a7643954fd001eab8605",
  "tenantId": "8f5decca-1004-440a-a720-80e20bfa3ef4",
  "default_template_version": "5b28a7643954fd001eab8606",
  "template_version": {
    "id": "5b28a7643954fd001eab8606",
    "name": "v1.0.0",
    "enabled": true,
    "compatible_versions": [
      "v1.0.0"
    ]
  },
  "template_versions": [
    {
      "id": "5b28a7643954fd001eab8606",
      "name": "v1.0.0",
      "enabled": true,
      "compatible_versions": [
        "v1.0.0"
      ]
    }
  ]
}
